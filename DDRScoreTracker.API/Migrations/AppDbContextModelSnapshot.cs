// <auto-generated />
using System;
using DDRScoreTracker.API.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace DDRScoreTracker.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("DDRScoreTracker.API.Models.Songs.Difficulty", b =>
                {
                    b.Property<int>("DifficultyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("DifficultyId");

                    b.ToTable("Difficulties");
                });

            modelBuilder.Entity("DDRScoreTracker.API.Models.Songs.Song", b =>
                {
                    b.Property<int>("SongId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("DifficultyId");

                    b.Property<string>("Name");

                    b.Property<byte>("Rating");

                    b.HasKey("SongId");

                    b.HasIndex("DifficultyId");

                    b.ToTable("Songs");
                });

            modelBuilder.Entity("DDRScoreTracker.API.Models.Songs.Song", b =>
                {
                    b.HasOne("DDRScoreTracker.API.Models.Songs.Difficulty", "Difficulty")
                        .WithMany()
                        .HasForeignKey("DifficultyId");
                });
#pragma warning restore 612, 618
        }
    }
}
